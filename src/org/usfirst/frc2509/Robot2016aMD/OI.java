
// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2509.Robot2016aMD;

import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

import org.usfirst.frc2509.Robot2016aMD.commands.ArmsIn;
import org.usfirst.frc2509.Robot2016aMD.commands.ArmsOut;
import org.usfirst.frc2509.Robot2016aMD.commands.AutonomousCommand;
import org.usfirst.frc2509.Robot2016aMD.commands.ElevatorDown;
import org.usfirst.frc2509.Robot2016aMD.commands.ElevatorStop;
import org.usfirst.frc2509.Robot2016aMD.commands.ElevatorUp;
import org.usfirst.frc2509.Robot2016aMD.commands.GripsClose;
import org.usfirst.frc2509.Robot2016aMD.commands.GripsOpen;
import org.usfirst.frc2509.Robot2016aMD.commands.GuidesClose;
import org.usfirst.frc2509.Robot2016aMD.commands.GuidesOpen;

import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.buttons.Button;
import edu.wpi.first.wpilibj.buttons.JoystickButton;



public class OI {
   

// Joystick stuff(ButtonsATM)
    public Joystick lStick;
    public Joystick rStick;

   
    public OI() {

        rStick = new Joystick(1);      
        lStick = new Joystick(0);
        
      //Grips Open/Close
        JoystickButton GripsOpen = new JoystickButton(rStick, 4);
        	GripsOpen.whenPressed(new GripsOpen());
        JoystickButton GripsClose = new JoystickButton(rStick, 5);
        	GripsClose.whenPressed(new GripsClose());
      //Elevator Up/down/stop
        JoystickButton ElevatorUp = new JoystickButton(lStick, 3);
        	ElevatorUp.whileHeld(new ElevatorUp());
        JoystickButton ElevatorDown = new JoystickButton(lStick, 2);
        	ElevatorDown.whileHeld(new ElevatorDown());
        //ElevatorStop shouldn't need to be use, merely an override/emergency stop.
        JoystickButton ElevatorStop = new JoystickButton(lStick, 1);
        	ElevatorStop.whenPressed(new ElevatorStop());
        //Guides In/Out
        JoystickButton GuidesOpen = new JoystickButton(rStick, 11);
        	GuidesOpen.whenPressed(new GuidesOpen());
        JoystickButton GuidesClose = new JoystickButton(rStick, 10);
        	GuidesClose.whenPressed(new GuidesClose());
        //Arms Out/In/Off
        JoystickButton ArmsOut = new JoystickButton(lStick, 5);
        	ArmsOut.whenPressed(new ArmsOut());
        JoystickButton ArmsIn = new JoystickButton(lStick, 4);
        	ArmsIn.whenPressed(new ArmsIn());
        
        	
        	
        	
        	
        	
        SmartDashboard.putData("Autonomous Command", new AutonomousCommand());

    }

    public Joystick getlStick() {
        return lStick;
    }

    public Joystick getrStick() {
        return rStick;
    }

	public void CheckDigital() {
		// TODO Auto-generated method stub
		
	}

}
